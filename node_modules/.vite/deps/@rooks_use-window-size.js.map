{
  "version": 3,
  "sources": ["../../@rooks/use-window-size/lib/index.esm.js"],
  "sourcesContent": ["import { useEffect, useLayoutEffect, useState } from 'react';\n\n/**\r\n * useIsomorphicEffect\r\n * Resolves to useEffect when \"window\" is not in scope and useLayout effect in the browser\r\n * @param {function} callback Callback function to be called on mount\r\n */\r\nconst useIsomorphicEffect = typeof window === \"undefined\" ? useEffect : useLayoutEffect;\n\nconst nullDimensions = {\r\n    innerWidth: null,\r\n    innerHeight: null,\r\n    outerWidth: null,\r\n    outerHeight: null\r\n};\r\nfunction getDimensions() {\r\n    return {\r\n        innerWidth: window.innerWidth,\r\n        innerHeight: window.innerHeight,\r\n        outerWidth: window.outerWidth,\r\n        outerHeight: window.outerHeight\r\n    };\r\n}\r\n/**\r\n * useWindowSize hook\r\n * A hook that provides information of the dimensions of the window\r\n * @return Dimensions of the window\r\n */\r\nfunction useWindowSize() {\r\n    const [windowSize, setWindowSize] = useState(() => {\r\n        if (typeof window !== \"undefined\") {\r\n            return getDimensions();\r\n        }\r\n        else {\r\n            return nullDimensions;\r\n        }\r\n    });\r\n    // set resize handler once on mount and clean before unmount\r\n    useIsomorphicEffect(() => {\r\n        function onResize() {\r\n            setWindowSize(getDimensions());\r\n        }\r\n        window.addEventListener(\"resize\", onResize);\r\n        return () => {\r\n            window.removeEventListener(\"resize\", onResize);\r\n        };\r\n    }, []);\r\n    return windowSize;\r\n}\n\nexport default useWindowSize;\n//# sourceMappingURL=index.esm.js.map\n"],
  "mappings": ";;;;;;AAAA,mBAAqD;AAOrD,IAAM,sBAAsB,OAAO,WAAW,cAAc,yBAAY;AAExE,IAAM,iBAAiB;AAAA,EACnB,YAAY;AAAA,EACZ,aAAa;AAAA,EACb,YAAY;AAAA,EACZ,aAAa;AACjB;AACA,SAAS,gBAAgB;AACrB,SAAO;AAAA,IACH,YAAY,OAAO;AAAA,IACnB,aAAa,OAAO;AAAA,IACpB,YAAY,OAAO;AAAA,IACnB,aAAa,OAAO;AAAA,EACxB;AACJ;AAMA,SAAS,gBAAgB;AACrB,QAAM,CAAC,YAAY,aAAa,QAAI,uBAAS,MAAM;AAC/C,QAAI,OAAO,WAAW,aAAa;AAC/B,aAAO,cAAc;AAAA,IACzB,OACK;AACD,aAAO;AAAA,IACX;AAAA,EACJ,CAAC;AAED,sBAAoB,MAAM;AACtB,aAAS,WAAW;AAChB,oBAAc,cAAc,CAAC;AAAA,IACjC;AACA,WAAO,iBAAiB,UAAU,QAAQ;AAC1C,WAAO,MAAM;AACT,aAAO,oBAAoB,UAAU,QAAQ;AAAA,IACjD;AAAA,EACJ,GAAG,CAAC,CAAC;AACL,SAAO;AACX;AAEA,IAAO,oBAAQ;",
  "names": []
}
